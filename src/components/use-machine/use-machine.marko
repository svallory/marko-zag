import type { MachineSrc, StateMachine } from "@zag-js/core";
import type { HookOptions,RSA, SSS, SEO, SAEO } from "../../types";

export interface Input<TC extends RSA, TS extends SSS, TE extends SEO = SAEO> {
  machine: MachineSrc<TC, TS, TE>;
  options?: HookOptions<TC, TS, TE>;
}

<use-service/service machine=input.machine options=input.options/>

<let/machineState=service().getState()/>

<effect() {
  const unsubscribe = service().subscribe((nextState) => {
    machineState = nextState;
  });
  return () => {
    unsubscribe();
  };
}/>

<return=(
  [
    machineState,
    (event: StateMachine.Event<TE>) => service().send(event),
    service,
  ] as const
)/>