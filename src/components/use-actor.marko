import type { Machine, StateMachine as S } from "@zag-js/core";
import type { State, Event } from "../types";

export interface Input<TContext extends Record<string, any>, TState extends S.StateSchema, TEvent extends S.EventObject = S.AnyEventObject> {
  service: Machine<TContext, TState, TEvent>;
}

<use-snapshot/actorState service=input.service/>

<return=(
  [
    actorState,
    input.service.send,
  ] as [State<TContext, TState, TEvent>, (evt: Event<TEvent>) => void]
)/>
