import * as checkbox from "@zag-js/checkbox";
import { normalizeProps } from "../normalize-props";

export type Input = (checkbox.Context & {
  renderBody: Marko.Body<[checkbox.Api<any>]>;
}
);
<const/machine=(
  () =>
    checkbox.machine({
      id: input.id,
      checked: input.checked,
      dir: input.dir,
      disabled: input.disabled,
      form: input.form,
      getRootNode: input.getRootNode,
      ids: input.ids,
      invalid: input.invalid,
      name: input.name,
      onCheckedChange: input.onCheckedChange,
      required: input.required,
      value: input.value,
    })
)/>

<use-machine/[machineState, send] machine=machine/>
<const/api=checkbox.connect(machineState, send, normalizeProps)/>

<return=api/>

<label
  class="flex flex-row-reverse gap-2 select-none cursor-pointer text-lg"
  ...api.rootProps
>
  <span ...api.labelProps>
    <${input.renderBody}=[api]/>
  </span>
  <div ...api.controlProps/>
  <input class="sr-only" ...api.hiddenInputProps>
</label>
